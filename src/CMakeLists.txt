# Header files need not be enumerated
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR} ${PROJECT_BINARY_DIR})

###########
# LIB ER #
###########

# Install header files
LIST(APPEND liber_install_headers
  er.h
)
INSTALL(FILES ${liber_install_headers} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})

LIST(APPEND liber_srcs
    er.c
    er_util.c
)

IF(BUILD_SHARED_LIBS)
   # ER Library
   ADD_LIBRARY(er_o OBJECT ${liber_srcs})
   TARGET_LINK_LIBRARIES(er_o PRIVATE ${ER_EXTERNAL_LIBS})
   TARGET_COMPILE_DEFINITIONS(er_o PUBLIC REDSET_ENABLE_MPI)

   ADD_LIBRARY(er SHARED $<TARGET_OBJECTS:er_o>)
   ADD_LIBRARY(er::er ALIAS er)
   TARGET_LINK_LIBRARIES(er PUBLIC ${ER_EXTERNAL_LIBS})
   TARGET_INCLUDE_DIRECTORIES(er PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<INSTALL_INTERFACE:include>)
   TARGET_COMPILE_DEFINITIONS(er PUBLIC REDSET_ENABLE_MPI)
   SET_TARGET_PROPERTIES(er PROPERTIES OUTPUT_NAME er CLEAN_DIRECT_OUTPUT 1)
   INSTALL(TARGETS er EXPORT erTargets LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
ENDIF()

# ER Library
ADD_LIBRARY(er_static_o OBJECT ${liber_srcs})
TARGET_LINK_LIBRARIES(er_static_o PRIVATE ${ER_EXTERNAL_STATIC_LIBS})
TARGET_COMPILE_DEFINITIONS(er_static_o PUBLIC REDSET_ENABLE_MPI)

ADD_LIBRARY(er-static STATIC $<TARGET_OBJECTS:er_static_o>)
ADD_LIBRARY(er::er-static ALIAS er-static)
IF(ER_LINK_STATIC)
        SET_TARGET_PROPERTIES(er-static PROPERTIES LINK_SEARCH_START_STATIC 1)
        SET_TARGET_PROPERTIES(er-static PROPERTIES LINK_SEARCH_END_STATIC 1)
ENDIF(ER_LINK_STATIC)
TARGET_LINK_LIBRARIES(er-static PUBLIC ${ER_EXTERNAL_STATIC_LIBS})
TARGET_INCLUDE_DIRECTORIES(er-static PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<INSTALL_INTERFACE:include>)
TARGET_COMPILE_DEFINITIONS(er-static PUBLIC REDSET_ENABLE_MPI)

SET_TARGET_PROPERTIES(er-static PROPERTIES OUTPUT_NAME er CLEAN_DIRECT_OUTPUT 1)
INSTALL(TARGETS er-static EXPORT erTargets LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
